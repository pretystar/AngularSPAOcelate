Roadmap:
1. consul integration
2. dockerlized
3. k8s
Feature:
1. MFA with email
1. User management
2. Role management
3. backend integration (consul)
==========
dotnet ef migrations add InitialIdentityServerPersistedGrantDbMigration -c PersistedGrantDbContext -o Data/Migrations/IdentityServer/PersistedGrantDb
dotnet ef migrations add InitialIdentityServerConfigurationDbMigration -c ConfigurationDbContext -o Data/Migrations/IdentityServer/ConfigurationDb
dotnet ef migrations add CreateIdentity -c ApplicationDbContext -o Data/Migrations
Generate db:
cd identityserver
dotnet ef database update
==========
cd tools\consul
consul.exe agent -data-dir=data -ui-dir=web_ui -dev


ng build --output-path ..\wwwroot --aot
ng build --output-path ..\wwwroot --watch --aot
ng new Web

for new project
frontend:
	copy shared+AuthInterceptor.ts
	npm install --save @angular/material @angular/cdk
	npm install --save @angular/animations
	npm install github:angular/flex-layout-builds --save
	npm install --save hammerjs
	npm install @angular/flex-layout --save
for bug fix:
	npm install @angular-devkit/core --save
	npm install @angular-devkit/schematics --save
	npm install @schematics/angular --save
	npm update --save

Port:
	Ocelot:5001
		http://localhost:5001/index.html
	identityserver: 5000
	Demobapi:5002

===========
1. Import BrowserModule, BrowserAnimationsModule and HttpModule only once (either in your root module or a core module).
2. Only once: RouterModule.forRoot(routes); RouterModule.forChild(routes)
3. 
@NgModule({
  imports: [
    SharedModule,
    AccountRoutingModule,
    //BrowserModule,
    //BrowserAnimationsModule
  ],
  ...
4. Not work: dotnet ef database update --context ApplicationDbContext
5. 